
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string URLAgregar = Url.Action("Create", "Incident");
    string URLActualizar = Url.Action("Edit", "Incident");
}

<div class="container">
    <div class="card shadow mb-4">
        <div class="card-header py-3 j-df j-color-text j-jc-center">
            <h2><i class="fas fa-building">&nbsp;&nbsp;</i> INCIDENTES</h2>
        </div>

        <div class="card-body">
            <div class="row my-4">

                <div class="col-sm-12">
                    <a href="@URLAgregar" class="btn btn-primary">Agregar</a>

                    <hr />

                    <table class="table-bordered w-100" id="incidentes">

                        <thead>

                            <tr>
                                <th>USUARIO</th>
                                <th>TEMA</th>
                                <th>PRIORIDAD</th>
                                <th>ESTATUS</th>
                                <th>CREADA</th>
                                <th>ACCIONES</th>
                            </tr>

                        </thead>

                        <tbody>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


    </div>
</div>
<<<<<<< Updated upstream

@section scripts{
    <script src="~/lib/datatable/js/jquery.dataTables.js"></script>
    <script src="~/lib/datatable/js/dataTables.bootstrap4.js"></script>
    <script src="~/lib/datatable-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/datatable-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/datatable/js/dataTables.buttons.min.js"></script>
    <link href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            $("#incidentes").DataTable().destroy();

            var urlMetodo = "/Incident/GetAllIndex";
            $("#incidentes").DataTable({

                ajax: {
                    url: urlMetodo,
                    type: "GET",
                    datatype: "json"
                },
                responsive: true,
                language: {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                columns: [
                    { data: "user", autoWidth: false, className: "no-wrap text-center" },
                    { data: "theme", autoWidth: false, className: "no-wrap text-center" },
                    { data: "priority", autoWidth: false, className: "no-wrap text-center" },
                    { data: "status", autoWidth: false, className: "no-wrap text-center" },
                    { data: "created", autoWidth: false, className: "no-wrap text-center" },
                     {
                         className: "text-center",  data: function (data) {
                             var btn = `<a style="color:var(--primary)" class="tooltipped btn btn-xs waves-effect secondary-button blue-ina" href="@URLActualizar?id=${data.id}"><b><i class="align-middle fas fa-fw fa-edit mr-2"></i></b></a>&nbsp;&nbsp;`;
                               return btn;
                            }
                     }
                ]
            });
        });
    </script>
}
=======
<p>
    <a asp-action="Create">Crear Incidente</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserRequestBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Theme)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Attended)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserRequestBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Theme)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Attended)
            </td>
            <td>
                @Html.ActionLink("Editar", "Edit", new {  id=item.Id  }) |
                @Html.ActionLink("Detalles", "Details", new {  id=item.Id }) |
                @Html.ActionLink("Eliminar", "Delete", new { id=item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
<style>

    .table-bordered {
        color: #463f57;
        background-color: #004aad;
        border-color: #463f57;
    }

    .btn-primary {
        color: #FCFCFF;
        background-color: #463f57;
        border-color: #463f57;
    }

    .fa-building {
        color: #463f57;
    }

    .j-color-text {
        color: #463f57;
    }
</style>
>>>>>>> Stashed changes
