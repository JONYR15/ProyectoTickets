@model IncidentViewModelEdit

@{
    ViewBag.title = "Sessions";
    var URLGetSessions = Url.Action("GetSesionsByIncident", "Sesion");
    var URLDeleteSessions = Url.Action("Delete", "Sesion");

}

@section styles{
    <link href="~/lib/timeline/dist/css/jtimeline.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-md-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3 j-df j-color-text j-jc-center">
                <h6>Details</h6>
            </div>

            <div class="card-body">
                <p>Number: @Model.Id</p>
                <p>Theme: @Model.Theme</p>
                <p>Created: @Model.Created</p>
                <hr />
                <p>Description: @Model.Description</p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card shadow mb-4">
            <div class="card-header py-3 j-df j-color-text j-jc-center">
                <h6>Sessions for the incident @Model.Theme</h6>
            </div>

            <div class="card-body">
                <div class="mb-5 pb-1 d-flex justify-content-between border-bottom">
                    <div class="">
                        <p>Sessions view in timeline</p>
                        <p class="small"><strong><span id="total-hours"></span></strong> hours recorded in attention to the incident</p>
                    </div>
                    <div class="text-center">
                        <p>Options</p>
                        <button id="add-btn" class="btn bg-transparent" title="Add"><i class="fas fa-plus"></i></button>
                        <button id="refresh-btn" class="btn bg-transparent" title="Refresh"><i class="fas fa-sync"></i></button>
                    </div>
                </div>

                <div id="jtimeline-demo" class="jtimeline hide">
                    <ul class="jtimeline-events" id="jtimeline-events">
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/lib/timeline/dist/js/jtimeline.js"></script>
    <script>
        var $timeline = $('#jtimeline-demo');
        var $timelineItems = $('#jtimeline-events');
        var $refrehButton = $("#refresh-btn");
        var $totalHoursLabel = $("#total-hours");
        var initialTimestamp = new Date('@Model.Created').getTime() / 1000;
        var initialTitle = 'The ticket has been created! <br> <strong>@Model.Created.ToShortDateString()</strong>';

        const SetOrRefreshTimelineSessions = () => {
            $.post('@URLGetSessions', {incidentId: @Model.Id}, function (data) {
                let items = [];
                let totalHours = 0;

                items.push("<li class='jtimeline-event is-active' data-timestamp='" + initialTimestamp + "'><div>" + initialTitle + "</div></li>");

                $.each(data, function (key, val) {
                    totalHours += val.hour;
                    let sessionId = val.id;
                    let dateCreated = new Date(val.created);
                    let timestamp = dateCreated.getTime() / 1000;
                    let title = val.description + "<br><strong>" + dateCreated.toLocaleDateString() + " (" + val.hour + " hours)</strong><br><i id='edit-session' class='mr-2 fas fa-eye text-info pointer' title='Details' data-id='" + sessionId + "'></i><i id='delete-session' class='fas fa-trash text-danger pointer' title='Delete' data-id='" + sessionId +"'></i>"
                    items.push("<li class='jtimeline-event' data-timestamp='" + timestamp + "'><div>" + title + "</div></li>");
                });

                $timelineItems.html(items);
                $totalHoursLabel.html(totalHours);

                $timeline.jTimeline();
            });
        }

        $refrehButton.on("click", function () { SetOrRefreshTimelineSessions() });

        $("body").on("click", "#delete-session", (e) => {
            e.preventDefault();

            let element = $(e.target);
            let id = element.data("id");

            $.post('@URLDeleteSessions', { id }, function (result) {
                if (result) {
                    SetOrRefreshTimelineSessions();
                    Snackbar.show({ pos: 'bottom-right', text: "Session deleted", actionText: 'Ok!', });
                    return;
                }
            });
        });

        $("body").on("click", "#edit-session", (e) => {
            e.preventDefault();

            let element = $(e.target);
            let id = element.data("id");

            alert(id);
        });

        SetOrRefreshTimelineSessions()
    </script>
}